<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MovieService</name>
    </assembly>
    <members>
        <member name="T:MovieService.IMovieService">
            <summary>
            Interface that MovieService classes are required to implement 
            </summary>
            <seealso cref="T:MovieService.OmdbService"/>
             /// <seealso cref="T:MovieService.TmdbService"/>
        </member>
        <member name="M:MovieService.IMovieService.SearchMovie(System.String)">
            <summary>
            A method that searches for a movie by its title
            </summary>
            <param name="title"></param>
            <returns>returns a list related movie titles and their release years</returns>
        </member>
        <member name="M:MovieService.IMovieService.GetMovieInfo(System.String)">
            <summary>
            A method that presents the data of a specific movie by its title
            </summary>
            <param name="title"></param>
            <returns>Movie information (Director, Awards, Actors and more)</returns>
        </member>
        <member name="M:MovieService.IMovieService.Authenticate(System.String,System.String)">
            <summary>
            Compsosites queries necessary for authentication porposes, loads and parses the response
            </summary>
            <exception cref="T:MovieService.AuthenticationFailedException">Throws exception when one of the authentication
            steps fails</exception>
        </member>
        <member name="T:MovieService.MovieInfo">
            <summary>
            A class that represents a movie and it's fields contain information about the movie
            </summary>
        </member>
        <member name="P:MovieService.MovieInfo.Title">
            <summary>The Title property represents the movie's title</summary> 
            <value>The Title property gets/sets the value of the string field title</value>
        </member>
        <member name="P:MovieService.MovieInfo.Year">
            <summary>The Year property represents the movie's release year</summary> 
            <value>The Year property gets/sets the value of the string field year</value>
        </member>
        <member name="P:MovieService.MovieInfo.Rated">
            <summary>The Rated property represents the movie's rate</summary> 
            <value>The Rated property gets/sets the value of the string field rated</value>
        </member>
        <member name="P:MovieService.MovieInfo.Released">
            <summary>The Released property represents the movie's release date</summary> 
            <value>The Released property gets/sets the value of the string field release</value>
        </member>
        <member name="P:MovieService.MovieInfo.RunTime">
            <summary>The RunTime property represents the movie's runTime</summary> 
            <value>The RunTime property gets/sets the value of the string field runTime</value>
        </member>
        <member name="P:MovieService.MovieInfo.Genre">
            <summary>The Genre property represents the movie's genre</summary> 
            <value>The Genre property gets/sets the value of the string field genre</value>
        </member>
        <member name="P:MovieService.MovieInfo.Director">
            <summary>The Director property represents the movie's director</summary> 
            <value>The Director property gets/sets the value of the string field director</value>
        </member>
        <member name="P:MovieService.MovieInfo.Writer">
            <summary>The Writer property represents the movie's writer</summary> 
            <value>The Writer property gets/sets the value of the string field writer</value>
        </member>
        <member name="P:MovieService.MovieInfo.Actors">
            <summary>The Actors property represents the movie's actors</summary> 
            <value>The Actors property gets/sets the value of the string field actors</value>
        </member>
        <member name="P:MovieService.MovieInfo.Plot">
            <summary>The Plot property represents the movie's plot</summary> 
            <value>The Plot property gets/sets the value of the string field plot</value>
        </member>
        <member name="P:MovieService.MovieInfo.Language">
            <summary>The Language property represents the movie's language</summary> 
            <value>The Language property gets/sets the value of the string field language</value>
        </member>
        <member name="P:MovieService.MovieInfo.Country">
            <summary>The Country property represents the movie's country</summary> 
            <value>The Country property gets/sets the value of the string field country</value>
        </member>
        <member name="P:MovieService.MovieInfo.Awards">
            <summary>The Awards property represents the movie's awards</summary> 
            <value>The Awards property gets/sets the value of the string field awards</value>
        </member>
        <member name="P:MovieService.MovieInfo.Rating">
            <summary>The Rating property represents the movie's rating</summary> 
            <value>The Rating property gets/sets the value of the string field rating</value>
        </member>
        <member name="M:MovieService.MovieInfo.ToString">
            <summary>
            Overriding ToString to print a MovieInfo Object
            </summary>
            <returns>A string representing A MovieInfo Object</returns>
        </member>
        <member name="M:MovieService.MovieInfo.Equals(System.Object)">
            <summary>
            Overriding Equals to be able to compare between two object. Mainly for testing purposes
            </summary>
            <param name="obj"></param>
            <returns>True if Object are equal or False, otherwise</returns>
        </member>
        <member name="M:MovieService.MovieInfo.GetHashCode">
            <summary>
            Overriding GetHashCode to be able to compare between two object. Mainly for testing purposes
            </summary>
            <returns>int base hash code</returns>
        </member>
        <member name="T:MovieService.WrongServiceNameException">
            <summary>
            Thrown when trying to create an instance of an unknown service
            </summary>
        </member>
        <member name="M:MovieService.WrongServiceNameException.#ctor(System.String)">
            <summary>
            Thrown when trying to create an instance of an unknown service
            </summary>
        </member>
        <member name="T:MovieService.TitleNotFoundException">
            <summary>
            Thrown when no data is found for the title that was passed
            </summary>
        </member>
        <member name="M:MovieService.TitleNotFoundException.#ctor(System.String)">
            <summary>
            Thrown when no data is found for the title that was passed
            </summary>
        </member>
        <member name="T:MovieService.FailedToLoadMovieDBException">
            <summary>
            Thrown when the data file fails to load
            </summary>
        </member>
        <member name="M:MovieService.FailedToLoadMovieDBException.#ctor(System.String)">
            <summary>
            Thrown when the data file fails to load
            </summary>
        </member>
        <member name="T:MovieService.AuthenticationFailedException">
            <summary>
            Thrown when authentication fails
            </summary>
        </member>
        <member name="M:MovieService.AuthenticationFailedException.#ctor(System.String)">
            <summary>
            Thrown when authentication fails
            </summary>
        </member>
        <member name="T:MovieService.MovieServiceFactory">
            <summary>
            A static class used as a factory for creating Movie Services  
            </summary>
        </member>
        <member name="M:MovieService.MovieServiceFactory.GetMovieService(System.String)">
            <summary>
            A method for creating instances of Movie Services
            </summary>
            <param name="service"></param>
            <returns>An object of type IMovieService</returns>
            <exception cref="T:MovieService.WrongServiceNameException">Thrown when trying to pass
             a name of a service we do not suuport </exception>
        </member>
        <member name="T:MovieService.OmdbService">
            <summary>
            A class that implements the IMoveService Interface using the OMDb RESTful API 
            </summary>
            <seealso cref="T:MovieService.IMovieService"/>
        </member>
        <member name="P:MovieService.OmdbService.Service">
            <summary>The Service property represents the one and only(singleton) instance of OmdbServoce</summary> 
            <value>The Service property gets the service or creates one if needed</value>
        </member>
        <member name="M:MovieService.OmdbService.SearchMovie(System.String)">
            <summary>
            Compsosites a query, loads and parses the response
            </summary>
            <param name="title"></param>
            <returns>Object of type SearchResult containing names and release years of resembling movie titles</returns>
            <exception cref="T:MovieService.FailedToLoadMovieDBException">Throws exception when the query result file 
            fails to load</exception>
            <exception cref="T:MovieService.TitleNotFoundException">Throws exception when Omdb returns a false reponse 
            (the movie title does not exist in the database)</exception>
        </member>
        <member name="M:MovieService.OmdbService.GetMovieInfo(System.String)">
            <summary>
            Compsosites a query, loads and parses the response
            </summary>
            <param name="title"></param>
            <returns>Obhect of type MovieInfo containing information about a particular movie</returns>
            <exception cref="T:MovieService.FailedToLoadMovieDBException">Throws exception when the query result file 
            fails to load</exception>
            <exception cref="T:MovieService.TitleNotFoundException">Throws exception when Omdb returns a false reponse 
            (the movie title does not exist in the database)</exception>
        </member>
        <member name="M:MovieService.OmdbService.Authenticate(System.String,System.String)">
            <summary>
            Compsosites queries necessary for authentication porposes, loads and parses the response
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns>A string indicationg that there is no need for authentication</returns>
        </member>
        <member name="T:MovieService.SearchResult">
            <summary>
            A class that represnets a list of movies by their titles and release years
            </summary>
        </member>
        <member name="M:MovieService.SearchResult.#ctor">
            <summary>
            SearchResult Constructor that takes no parameters
            </summary>
        </member>
        <member name="P:MovieService.SearchResult.Titles">
            <summary>The Titles property represents the a list of movie titles</summary> 
            <value>The Titles property gets/sets the value of the list field titles</value>
        </member>
        <member name="P:MovieService.SearchResult.Years">
            <summary>The Titles property represents the a list of movie release year</summary> 
            <value>The Years property gets/sets the value of the list field years</value>
        </member>
        <member name="P:MovieService.SearchResult.Id">
            <summary>The Id property represents the a list of movie id's</summary> 
            <value>The Titles property gets/sets the value of the list field titles</value>
        </member>
        <member name="M:MovieService.SearchResult.ToString">
            <summary>
            Overriding ToString to print a SearchResult Object
            </summary>
            <returns>A string representing A SearchResult Object</returns>
        </member>
        <member name="T:MovieService.TmdbService">
            <summary>
            A class that implements the IMoveService Interface using the TMDb RESTful API 
            </summary>
            <seealso cref="T:MovieService.IMovieService"/>
        </member>
        <member name="P:MovieService.TmdbService.Token">
            <summary>The Token property represents the request token we use for TMDb authentication</summary> 
            <value>The Token property gets/sets the value of the string field Token</value>
        </member>
        <member name="P:MovieService.TmdbService.Service">
            <summary>The Service property represents the one and only(singleton) instance of TmdbServoce</summary> 
            <value>The Service property gets the service or creates one if needed</value>
        </member>
        <member name="M:MovieService.TmdbService.Authenticate(System.String,System.String)">
            <summary>
            Compsosites queries necessary for authentication porposes, loads and parses the response
            </summary>
            <exception cref="T:MovieService.AuthenticationFailedException">Throws exception when one of the authentication
            steps fails</exception> 
            <returns>A string indicating the status of the authentication</returns>
            <exception cref="T:MovieService.AuthenticationFailedException">Throws exception when the authentication fails</exception>
        </member>
        <member name="M:MovieService.TmdbService.SearchMovie(System.String)">
            <summary>
            Compsosites a query, loads and parses the response
            </summary>
            <param name="title"></param>
            <returns>Object of type SearchResult containing names and release years of resembling movie titles</returns>
            <exception cref="T:MovieService.FailedToLoadMovieDBException">Throws exception when the query fails</exception>
        </member>
        <member name="M:MovieService.TmdbService.GetMovieInfo(System.String)">
            <summary>
            Compsosites a query, loads and parses the response
            </summary>
            <param name="title"></param>
            <returns>Object of type MovieInfo containing information from selected movie</returns>
            <exception cref="T:MovieService.TitleNotFoundException">Throws exception when the query fails</exception>
        </member>
    </members>
</doc>
